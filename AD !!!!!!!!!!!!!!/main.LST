C51 COMPILER V9.56.0.0   MAIN                                                              12/30/2016 20:03:07 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: F:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND

line level    source

   1          /*-----------------------------------------------
   2            名称：xpt2046 AD转换
   3            编写：hongXkeX
   4            日期：2016.12.26
   5            修改：无
   6          ------------------------------------------------*/
   7          
   8          #include "main.h"
   9          
  10          bit t0_flag;
  11          
  12          sbit DIN = P3^4;
  13          sbit CS  = P3^5;
  14          sbit CLK = P3^6;
  15          sbit DOUT= P3^7;
  16          sbit hc573_le = P1^0;
  17          
  18          u8 code ledtable[]={0x3f,0x06,0x5b,0x4f,0x66,0x6d,0x7d,0x07,0x7f,0x6f,0x00};
  19          u16 AdcVal,temp=0,tempf=0;
  20          long sum;                  // 避免获取到次数太多 总和溢出
  21          //u16 sum;                 // u16 类型最多支持获取16次 （最差情况）
  22          float Averge;
  23          u8 Disbuff[9];
  24          
  25          /*------------------------------------------------
  26                              主程序
  27          ------------------------------------------------*/
  28          void main()
  29          {
  30   1              u8 getAD_num;        // 记录获取到AD值得次数
  31   1              init();              // 单片机初始化子程序
  32   1              T0_init();           // 定时器0初始化
  33   1              Usart_init();        // 串口初始化
  34   1              EA = 1;              // 开总中断
  35   1              while(1)              
  36   1              {
  37   2                      if( t0_flag ) {
  38   3                              t0_flag = 0;
  39   3                              AdcVal = ReadAD(0x97);    //1010 0100  97->点位器 a7->光敏 
  40   3                              sum += AdcVal;            
  41   3                              getAD_num++;
  42   3                      }
  43   2                      if( getAD_num >= 100 ) {      
  44   3                              getAD_num = 0;
  45   3                              temp = sum / 100;
  46   3                              SBUF = temp;
  47   3                              
  48   3                              Averge = (temp) * 5.0 / 4096.0;
  49   3                              
  50   3                              tempf = Averge * 1000;
  51   3                              
  52   3                              Disbuff[7] = tempf / 1000;            // 千位
  53   3                              Disbuff[6] = tempf % 1000 / 100;      // 百位
  54   3                              Disbuff[5] = tempf % 1000 % 100 / 10; // 十位
  55   3                              Disbuff[4] = tempf % 1000 % 100 % 10; // 个位
C51 COMPILER V9.56.0.0   MAIN                                                              12/30/2016 20:03:07 PAGE 2   

  56   3                              
  57   3                              Disbuff[3] = temp / 1000;            // 千位
  58   3                              Disbuff[2] = temp % 1000 / 100;      // 百位
  59   3                              Disbuff[1] = temp % 1000 % 100 / 10; // 十位
  60   3                              Disbuff[0] = temp % 1000 % 100 % 10; // 个位
  61   3                              sum = 0;        
  62   3                      }       
  63   2              }
  64   1      }
  65          
  66          /*------------------------------------------------
  67                          读取AD值函数
  68          ------------------------------------------------*/
  69          u16 ReadAD(u8 cmd)
  70          {
  71   1              u8 i;
  72   1              u16 dat = 0;
  73   1              CS = 0;
  74   1              for( i = 0; i < 8; i++ )
  75   1              {
  76   2                      CLK = 0;
  77   2                      if( cmd & 0x80 )
  78   2                              DIN = 1;
  79   2                      else
  80   2                              DIN = 0;
  81   2                      CLK = 1;
  82   2                      cmd = cmd << 1;
  83   2              }
  84   1              
  85   1              for( i = 0; i < 16; i++ )
  86   1              {
  87   2                      CLK = 0;
  88   2                      dat = dat << 1;
  89   2                      CLK = 1;
  90   2                      dat |= DOUT;
  91   2              }
  92   1              
  93   1              CLK = 0;
  94   1              CS = 1;
  95   1              return ( ( dat >> 3) & 0xfff ); 
  96   1      }
  97          
  98          /*------------------------------------------------
  99                          定时器0初始化
 100          ------------------------------------------------*/
 101          void T0_init()
 102          {
 103   1              TMOD &= 0xf0;                  // XXXX 0000
 104   1              TMOD |= 0x01;                  // XXXX 0001  定时器0方式1
 105   1              TH0 = ( 65536 - 1000 ) / 256;  // 1ms
 106   1              TL0 = ( 65536 - 1000 ) % 256;
 107   1              ET0 = 1;                       // 允许定时器0中断
 108   1              TR0 = 1;                       // 定时器0开始运行
 109   1      }
 110          
 111          /*------------------------------------------------
 112                          定时器0中断服务
 113          ------------------------------------------------*/
 114          void t0() interrupt 1
 115          {
 116   1              static u8 disChar_num = 0;    
 117   1              TH0 = ( 65536 - 1000 ) / 256;
C51 COMPILER V9.56.0.0   MAIN                                                              12/30/2016 20:03:07 PAGE 3   

 118   1              TL0 = ( 65536 - 1000 ) % 256;
 119   1              t0_flag = 1;
 120   1              disChar_num++;              
 121   1              if( disChar_num >= 3)         // 3ms
 122   1              {
 123   2                      disChar_num = 0;
 124   2                      displayChar( Disbuff, 8 );
 125   2                      displayLed2( 7, Disbuff[7], 0X80);
 126   2              }
 127   1      }
 128          
 129          /*------------------------------------------------
 130                       单片机初始化子程序
 131          ------------------------------------------------*/
 132          void init()
 133          {
 134   1              P2 = 0xff;
 135   1              hc573_le = 1;
 136   1      }
 137          
 138          /*------------------------------------------------
 139                       串口初始化子程序
 140          ------------------------------------------------*/
 141          void Usart_init()
 142          {
 143   1              TMOD &= 0x0f;     // 0000 XXXX
 144   1              TMOD |= 0x20;     // 方式2 --> 波特率
 145   1              SCON &= 0x0f;     // 0000 XXXX
 146   1              SM0 = 0;              
 147   1              SM1 = 1;           
 148   1      //  REN = 1;
 149   1              TH1 = 0xfd;       // 9600
 150   1              TL1 = 0xfd; 
 151   1              
 152   1              ES = 1;           // 允许串行中断
 153   1              TR1 = 1;          // for time1   
 154   1      }
 155          
 156          /*------------------------------------------------
 157                       串口中断服务函数
 158          ------------------------------------------------*/
 159          void usart() interrupt 4
 160          {
 161   1              if(TI) {
 162   2                      TI=0;                   
 163   2              }
 164   1      }
 165          
 166          /*------------------------------------------------
 167                        显示多位数码管子程序 1
 168          ------------------------------------------------*/
 169          void displayChar(u8* buf, u8 len) 
 170          {                                 
 171   1              u8 i;                         
 172   1              if( len > 8 )  len = 8;             
 173   1              for( i = 0; i < len; i++ )      
 174   1              {                              
 175   2                      displayLed(i, buf[i]);    
 176   2                      delay300us();            // 延时优化
 177   2              }                             
 178   1              for( ; i < 8; i++ )          
 179   1              {                            
C51 COMPILER V9.56.0.0   MAIN                                                              12/30/2016 20:03:07 PAGE 4   

 180   2                      displayLed(i, 10);       
 181   2                      delay300us();                    
 182   2              }                            
 183   1      }
 184                                                    
 185          /*------------------------------------------------
 186                         显示单独数码管子程序
 187                  
 188                  show ledteble[seg] in add
 189                  add:1 2 3 4 5 6 7 8
 190                  seg:0 ~ 9    10 is none
 191          ------------------------------------------------*/
 192          void displayLed(u8 add, u8 seg)
 193          {
 194   1              static u8 tep;
 195   1              P0 = 0;                         // 消影 
 196   1              if( seg > 10 || add > 7 ) return;               
 197   1              tep &= ~( 7 << 2 );                 // 位选  XXX0 00XX for 138 --> 位选 
 198   1              tep |= add << 2;                        // add to 138                      
 199   1              P2 = tep;                         
 200   1              _nop_();                         
 201   1              _nop_();                         
 202   1              P0 = ledtable[seg];             
 203   1              _nop_();                        
 204   1      }
 205          
 206          /*------------------------------------------------
 207                         显示单独数码管子程序 加个小数点
 208                  
 209                  show ledteble[seg] in add
 210                  add:1 2 3 4 5 6 7 8
 211                  seg:0 ~ 9    10 is none
 212          ------------------------------------------------*/
 213          void displayLed2(u8 add, u8 seg, u8 nd)
 214          {
 215   1              static u8 tep;
 216   1              P0 = 0;                         // 消影 
 217   1              if( seg > 10 || add > 7 ) return;               
 218   1              tep &= ~( 7 << 2 );                 // 位选  XXX0 00XX for 138 --> 位选 
 219   1              tep |= add << 2;                        // add to 138                      
 220   1              P2 = tep;                         
 221   1              _nop_();                         
 222   1              _nop_();                         
 223   1              P0 = ledtable[seg] | nd;             
 224   1              _nop_();                        
 225   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    693    ----
   CONSTANT SIZE    =     11    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     26       6
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
